// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model HairSalon {
  id          Int        @id @default(autoincrement())
  name        String
  mainImage   String
  images      String[]
  description String
  openingTime DateTime
  closingTime DateTime
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  slug        String     @unique
  priceRange  PRICERANGE
  services    Service[]
  firstName    String
  lastName     String
  email       String     @unique
  password    String
  locationId  Int
  location    Location   @relation(fields: [locationId], references: [id])
  phoneNumber String?
  stylists    Stylist[]
  reviews   Review[]
}

model Service {
  id           Int           @id @default(autoincrement())
  name         String
  description  String?
  price        String
  hairSalonId  Int
  hairSalon    HairSalon     @relation(fields: [hairSalonId], references: [id])
  duration     Int
  appointments Appointment[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Location {
  id         Int         @id @default(autoincrement())
  city       String
  country    String
  address    String
  zipCode    String
  hairSalons HairSalon[]
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}

model Appointment {
  id         Int      @id @default(autoincrement())
  date       DateTime
  customerId Int
  customer   Customer @relation(fields: [customerId], references: [id])
  stylistId  Int
  stylist    Stylist  @relation(fields: [stylistId], references: [id])
  serviceId  Int
  service    Service  @relation(fields: [serviceId], references: [id])
}

model Customer {
  id           Int           @id @default(autoincrement())
  firstName    String
  lastName     String
  phoneNumber  String
  email        String      @unique
  password     String
  appointments Appointment[]
  city          String?
  createdAt  DateTime    @default(now())
  updatedAt  DateTime?    @updatedAt
  reviews   Review[]
}

model Stylist {
  id           Int           @id @default(autoincrement())
  firstName    String
  lastName     String
  phoneNumber  String?
  email        String?       @unique
  password     String?
  images       String[]
  mainImage    String
  hairSalonId  Int
  hairSalon    HairSalon     @relation(fields: [hairSalonId], references: [id])
  appointments Appointment[]
}

model Review {
  id        Int      @id @default(autoincrement())
  hairSalon HairSalon @relation(fields: [hairSalonId], references: [id])
  hairSalonId Int
  customer  Customer @relation(fields: [customerId], references: [id])
  customerId Int
  rating    Float
  comment   String
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}

enum PRICERANGE {
  EXPENSIVE
  MEDIUM
  CHEAP
}

